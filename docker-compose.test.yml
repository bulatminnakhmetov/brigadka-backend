services:
  test-postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./certs/minio/public.crt:/root/.minio/certs/public.crt:ro
      - ./certs/minio/private.key:/root/.minio/certs/private.key:ro

  test-minio-init:
    image: minio/mc
    depends_on:
      test-minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        mc alias set minio http://test-minio:9000 minioadmin minioadmin &&
        mc mb -p minio/test-bucket || true
      "

  test-migrations:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=test-postgres
      - DB_PORT=5432
      - DB_USER=test_user
      - DB_PASSWORD=test_password
      - DB_NAME=test_db
    command: go run ./cmd/migrate -up
    depends_on:
      test-postgres:
        condition: service_healthy

  test-app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=test-postgres
      - DB_PORT=5432
      - DB_USER=test_user
      - DB_PASSWORD=test_password
      - DB_NAME=test_db
      - B2_ACCESS_KEY_ID=minioadmin
      - B2_SECRET_ACCESS_KEY=minioadmin
      - B2_ENDPOINT=test-minio:9000
      - B2_BUCKET_NAME=test-bucket
    volumes:
      - ./certs/ca/ca.crt:/usr/local/share/ca-certificates/minio-ca.crt:ro
    depends_on:
      - test-migrations
      - test-minio-init
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  tests:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - TEST_APP_URL=http://test-app:8080
    command: go test -v ./integration/...
    depends_on:
      test-app:
        condition: service_healthy
      test-minio-init:
        condition: service_completed_successfully
