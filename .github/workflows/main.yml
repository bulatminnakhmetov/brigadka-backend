name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # ⚠️ Укажи нужную версию Go

      - name: Run unit tests
        run: go test ./internal/...

  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          make start-integration-env

      - name: Run Integration Tests
        run: |
          make run-integration
          
      - name: Clean up
        if: always()
        run: |
          make down-integration-env

  deploy:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_URL }}
